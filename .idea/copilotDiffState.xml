<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/activity_service/src/main/java/com/child1/activity_service/Dto/ActivityRequestDto.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/activity_service/src/main/java/com/child1/activity_service/Dto/ActivityRequestDto.java" />
              <option name="originalContent" value="package com.child1.activity_service.Dto;&#10;&#10;&#10;import com.child1.activity_service.Model.ActivitType;&#10;import lombok.Data;&#10;&#10;import java.time.LocalDateTime;&#10;import java.util.Map;&#10;&#10;@Data&#10;public class ActivityRequestDto {&#10;&#10;    private Long userId;&#10;    private ActivitType activityType;&#10;    private Integer duration;&#10;    private Integer caloriesBurned;&#10;    private LocalDateTime startTime;&#10;    private Map&lt;String,Object&gt; additionalMetrics;&#10;}&#10;" />
              <option name="updatedContent" value="package com.child1.activity_service.Dto;&#10;&#10;&#10;import com.child1.activity_service.Model.ActivitType;&#10;import lombok.Data;&#10;&#10;import jakarta.validation.constraints.Min;&#10;import jakarta.validation.constraints.NotNull;&#10;&#10;import java.time.LocalDateTime;&#10;import java.util.Map;&#10;&#10;@Data&#10;public class ActivityRequestDto {&#10;&#10;    @NotNull(message = &quot;User ID is required&quot;)&#10;    private Long userId;&#10;&#10;    @NotNull(message = &quot;Activity type is required&quot;)&#10;    private ActivitType activityType;&#10;&#10;    @NotNull(message = &quot;Duration is required&quot;)&#10;    @Min(value = 1, message = &quot;Duration must be at least 1 minute&quot;)&#10;    private Integer duration;&#10;&#10;    @NotNull(message = &quot;Calories burned is required&quot;)&#10;    @Min(value = 0, message = &quot;Calories burned must be non-negative&quot;)&#10;    private Integer caloriesBurned;&#10;&#10;    @NotNull(message = &quot;Start time is required&quot;)&#10;    private LocalDateTime startTime;&#10;&#10;    private Map&lt;String,Object&gt; additionalMetrics;&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/activity_service/src/main/java/com/child1/activity_service/Dto/ActivityResponseDto.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/activity_service/src/main/java/com/child1/activity_service/Dto/ActivityResponseDto.java" />
              <option name="originalContent" value="package com.child1.activity_service.Dto;&#10;&#10;&#10;import com.child1.activity_service.Model.ActivitType;&#10;import com.child1.activity_service.Model.Activity;&#10;import lombok.AllArgsConstructor;&#10;import lombok.Data;&#10;&#10;import java.time.LocalDateTime;&#10;import java.util.Map;&#10;&#10;@Data&#10;public class ActivityResponseDto {&#10;&#10;&#10;&#10;    private Integer duration;&#10;    private Integer caloriesBurned;&#10;    private LocalDateTime startTime;&#10;    private ActivitType activityType;&#10;    private Map&lt;String, Object&gt; additionalMetrics;&#10;&#10;&#10;    public Activity toEntity() {&#10;        return Activity.builder()&#10;                .activityType(activityType)&#10;                .duration(duration)&#10;                .caloriesBurned(caloriesBurned)&#10;                .startTime(startTime)&#10;                .additionalMetrics(additionalMetrics)&#10;                .build();&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.child1.activity_service.Dto;&#10;&#10;&#10;import com.child1.activity_service.Model.ActivitType;&#10;import com.child1.activity_service.Model.Activity;&#10;import jakarta.validation.constraints.Min;&#10;import jakarta.validation.constraints.NotNull;&#10;import lombok.AllArgsConstructor;&#10;import lombok.Data;&#10;&#10;import java.time.LocalDateTime;&#10;import java.util.Map;&#10;&#10;@Data&#10;public class ActivityResponseDto {&#10;&#10;    @NotNull(message = &quot;Duration is required&quot;)&#10;    @Min(value = 1, message = &quot;Duration must be at least 1 minute&quot;)&#10;    private Integer duration;&#10;&#10;    @NotNull(message = &quot;Calories burned is required&quot;)&#10;    @Min(value = 0, message = &quot;Calories burned must be non-negative&quot;)&#10;    private Integer caloriesBurned;&#10;&#10;    @NotNull(message = &quot;Start time is required&quot;)&#10;    private LocalDateTime startTime;&#10;&#10;    @NotNull(message = &quot;Activity type is required&quot;)&#10;    private ActivitType activityType;&#10;&#10;    private Map&lt;String, Object&gt; additionalMetrics;&#10;&#10;&#10;    public Activity toEntity() {&#10;        return Activity.builder()&#10;                .activityType(activityType)&#10;                .duration(duration)&#10;                .caloriesBurned(caloriesBurned)&#10;                .startTime(startTime)&#10;                .additionalMetrics(additionalMetrics)&#10;                .build();&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>